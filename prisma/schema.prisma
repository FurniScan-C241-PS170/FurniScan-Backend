// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users{
  user_id     Int       @id @default(autoincrement())
  username    String    @unique 
  email       String    @unique
  password    String
  created_at  DateTime  @default(now())
  wishlists  Wishlist[] @relation("UsersWishlist") // declare relasi ke wishlist
}

model Categories {
  category_id   Int       @id @default(autoincrement())
  category_name String    @unique
  products      Products[] @relation("CategoryProducts") // declare relasi ke product 
}

model Products {
  product_id      Int       @id @default(autoincrement())
  product_name    String    @unique
  product_image   String  
  description     String
  color           String[]  @default([])
  stock_quantity  Int
  price           Int
  rating          Float
  material        String
  fabric          String
  dimension       String

  category      Categories  @relation("CategoryProducts", fields: [category_id], references: [category_id]) 
  category_id   Int
  wishlists  Wishlist[] @relation("ProductsWishlist") // declare relasi ke wishlist
}

// buat wishlist nanti dia harus relasi ke product dan user
model Wishlist {
  wishlist_id Int       @id @default(autoincrement())
  user        Users     @relation("UsersWishlist", fields: [user_id], references: [user_id])
  user_id     Int
  product     Products  @relation("ProductsWishlist", fields: [product_id], references: [product_id])
  product_id  Int

  @@unique([user_id, product_id])
}


// // prediksi
// model Prediction {
//   id   String @id @default(uuid())
//   data Json
// }

