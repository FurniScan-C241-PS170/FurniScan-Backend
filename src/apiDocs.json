{
  "openapi": "3.0.0",
  "info": {
    "title": "FurniScan API",
    "description": "API documentation of FurniScan app",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "localhost"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Data about users"
    },
    {
      "name": "Category",
      "description": "Data about categories"
    },
    {
      "name": "Wishlist",
      "description": "Operations about wishlist"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": ["User"],
        "summary": "Get All Users",
        "description": "Returns a list of users.",
        "responses": {
          "200": {
            "description": "Success get all users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": "1"
                          },
                          "username": {
                            "type": "string",
                            "example": "bagasdrible"
                          },
                          "email": {
                            "type": "string",
                            "example": "bagasdrible@gmail.com"
                          },
                          "created_at": {
                            "type": "date-time",
                            "example": "2024-05-31T14:53:37.586Z"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Success get all users"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "data": {
                      "type": "null",
                      "example": null
                    },
                    "message": {
                      "type": "string",
                      "example": "Server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/signup": {
      "post": {
        "tags": ["User"],
        "summary": "Add Data User",
        "description": "This API handles signup",
        "requestBody": {
          "description": "User object that needs to be added",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "repassword": {
                    "type": "string"
                  }
                },
                "required": ["username", "email", "password", "repassword"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success add user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "example": "bagasdrible"
                        },
                        "email": {
                          "type": "string",
                          "example": "bagasdrible@gmail.com"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Success add user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "User already exists or Password doesn't match",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "data": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "User already exist or Password doesn't match"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "data": {
                      "type": "null",
                      "example": null
                    },
                    "message": {
                      "type": "string",
                      "example": "Server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["User"],
        "summary": "User login",
        "description": "This API handles login",
        "requestBody": {
          "description": "User login credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "string",
                          "example": "bagasdrible"
                        },
                        "email": {
                          "type": "string",
                          "example": "bagasdrible@gmail.com"
                        },
                        "token": {
                          "type": "string",
                          "example": "jwt.token.here"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "User success login"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "data": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Email and Password are required"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Can't find user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "data": {
                      "type": "string",
                      "example": "Can't find user"
                    },
                    "message": {
                      "type": "string",
                      "example": "User doesn't exist, please sign up"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "data": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid email or password"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "data": {
                      "type": "null",
                      "example": null
                    },
                    "message": {
                      "type": "string",
                      "example": "Server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/users/logout": {
      "post": {
        "tags": ["User"],
        "summary": "User logout",
        "description": "This API handles logout",
        "responses": {
          "200": {
            "description": "Successful logout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Logout successful"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "data": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error when logout"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/category": {
      "get": {
        "tags": ["Category"],
        "summary": "Get All Categories",
        "description": "Returns a list of categories.",
        "responses": {
          "200": {
            "description": "Success get all categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "category_name": {
                          "type": "string",
                          "example": "table"
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "example": "Success get all categories"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "data": {
                      "type": "string",
                      "example": "invalid"
                    },
                    "message": {
                      "type": "string",
                      "example": "error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Category"],
        "summary": "Add Category Data",
        "description": "Create new category data.",
        "requestBody": {
          "description": "Category object that needs to be added",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "category_name": {
                    "type": "string",
                    "example": "table"
                  }
                },
                "required": ["category_name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success add category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "category_name": {
                      "type": "string",
                      "example": "table"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "data": {
                      "type": "string",
                      "example": "invalid"
                    },
                    "message": {
                      "type": "string",
                      "example": "error when add category"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/product": {
      "get": {
        "tags": ["Product"],
        "summary": "Get all products",
        "description": "Returns a list of products.",
        "responses": {
          "201": {
            "description": "Success get all products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 201
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "product_name": {
                            "type": "string",
                            "example": "sofa 3 seater"
                          },
                          "product_image": {
                            "type": "string",
                            "example": "http://sajdsjfgjsad"
                          },
                          "description": {
                            "type": "string",
                            "example": "sofa 3 seater yang empuk parah"
                          },
                          "color": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": ["Red", "Blue"]
                          },
                          "stock_quantity": {
                            "type": "integer",
                            "example": 10
                          },
                          "price": {
                            "type": "integer",
                            "example": 1200000
                          },
                          "rating": {
                            "type": "number",
                            "format": "float",
                            "example": 4.7
                          },
                          "material": {
                            "type": "string",
                            "example": "Kulit terbaik pokonya"
                          },
                          "fabric": {
                            "type": "string",
                            "example": "-"
                          },
                          "dimension": {
                            "type": "string",
                            "example": "2M x 3M"
                          },
                          "category_id": {
                            "type": "integer",
                            "example": 1
                          },
                          "wishlist_id": {
                            "type": "integer",
                            "example": 1
                          }
                        }
                      },
                      "message": {
                        "type": "string",
                        "example": "Success get all products"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "data": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error when get all product"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Product"],
        "summary": "Add Product Data",
        "description": "Create new product data.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_name": {
                    "type": "string"
                  },
                  "product_image": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "color": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "stock_quantity": {
                    "type": "integer"
                  },
                  "price": {
                    "type": "integer"
                  },
                  "rating": {
                    "type": "number",
                    "format": "float"
                  },
                  "material": {
                    "type": "string"
                  },
                  "fabric": {
                    "type": "string"
                  },
                  "dimension": {
                    "type": "string"
                  },
                  "category_id": {
                    "type": "integer"
                  },
                  "wishlist_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success add products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "integer",
                        "example": 201
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "product_name": {
                            "type": "string",
                            "example": "sofa 3 seater"
                          },
                          "product_image": {
                            "type": "string",
                            "example": "http://sajdsjfgjsad"
                          },
                          "description": {
                            "type": "string",
                            "example": "sofa 3 seater yang empuk parah"
                          },
                          "color": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": ["Red", "Blue"]
                          },
                          "stock_quantity": {
                            "type": "integer",
                            "example": 10
                          },
                          "price": {
                            "type": "integer",
                            "example": 1200000
                          },
                          "rating": {
                            "type": "number",
                            "format": "float",
                            "example": 4.7
                          },
                          "material": {
                            "type": "string",
                            "example": "Kulit terbaik pokonya"
                          },
                          "fabric": {
                            "type": "string",
                            "example": "-"
                          },
                          "dimension": {
                            "type": "string",
                            "example": "2M x 3M"
                          },
                          "category_id": {
                            "type": "integer",
                            "example": 1
                          },
                          "wishlist_id": {
                            "type": "integer",
                            "example": 1
                          }
                        }
                      },
                      "message": {
                        "type": "string",
                        "example": "Success add product"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "data": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error when add product"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/wishlist": {
      "get": {
        "tags": ["Wishlist"],
        "summary": "Get All Wishlist Items",
        "description": "Returns a list of wishlist items.",
        "responses": {
          "200": {
            "description": "Success get all wishlist items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "wishlist_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "user_id": {
                        "type": "integer",
                        "example": 1
                      },
                      "product_id": {
                        "type": "integer",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "data": {
                      "type": "string",
                      "example": "invalid"
                    },
                    "message": {
                      "type": "string",
                      "example": "error when get all wishlist items"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Wishlist"],
        "summary": "Add Item to Wishlist",
        "description": "This API adds an item to the wishlist",
        "requestBody": {
          "description": "Wishlist item to add",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "integer"
                  },
                  "product_id": {
                    "type": "integer"
                  }
                },
                "required": ["user_id", "product_id"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item added to wishlist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "wishlist_id": {
                      "type": "integer"
                    },
                    "user_id": {
                      "type": "integer"
                    },
                    "product_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "data": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid input"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "data": {
                      "type": "string",
                      "example": "invalid"
                    },
                    "message": {
                      "type": "string",
                      "example": "error when add wishlist item"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/wishlist/{wishlistId}": {
      "put": {
        "tags": ["Wishlist"],
        "summary": "Update Wishlist Item",
        "description": "This API updates an item in the wishlist",
        "parameters": [
          {
            "name": "wishlistId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Updated wishlist item",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "integer"
                  },
                  "product_id": {
                    "type": "integer"
                  }
                },
                "required": ["user_id", "product_id"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Wishlist item updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "wishlist_id": {
                      "type": "integer"
                    },
                    "user_id": {
                      "type": "integer"
                    },
                    "product_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "data": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid input"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Wishlist item not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "data": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Wishlist item not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "data": {
                      "type": "string",
                      "example": "invalid"
                    },
                    "message": {
                      "type": "string",
                      "example": "error when update wishlist item"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Wishlist"],
        "summary": "Delete Wishlist Item",
        "description": "Delete a wishlist item by ID.",
        "parameters": [
          {
            "name": "wishlistId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the wishlist item to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Wishlist item deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Wishlist item deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Wishlist item not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "data": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Wishlist item not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "data": {
                      "type": "string",
                      "example": "invalid"
                    },
                    "message": {
                      "type": "string",
                      "example": "error when delete wishlist item"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
